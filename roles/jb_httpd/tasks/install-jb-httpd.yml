---
- assert:
    that:
      - httpd is defined
      - httpd.user is defined
      - httpd.user.name is defined
      - httpd.group is defined
      - httpd.group.name is defined
      - httpd.home is defined
    quiet: true

- group:
    name: "{{ httpd.group.name }}"
    state: present
    gid: "{{ httpd.group.id | default(omit) }}"

- user:
    name: "{{ httpd.user.name }}"
    state: present
    uid: "{{ httpd.user.id | default(omit) }}"

- file:
    path: "{{ httpd.home }}"
    owner: "{{ httpd.user.name }}"
    group: "{{ httpd.group.name }}"
    recurse: true

- set_fact:
    zip_file_repo: /opt/apps

- file:
    path: "{{ zip_file_repo }}"
    state: directory

- name: Download JBoss Core Services from CSP
  redhat_csp_download:
    url: "https://access.redhat.com/jbossnetwork/restricted/softwareDownload.html?softwareId=96561&product=core.service.apachehttp"
    dest: "{{ zip_file_repo }}/jbcs.zip"
    username: "{{ rhn_username }}"
    password: "{{ rhn_password }}"

- stat:
    path: "{{ httpd.home }}/httpd"
  register: httpd_home

- name: Unarchive JBoss Core Services
  unarchive:
    src: "{{ zip_file_repo }}/jbcs.zip"
    dest: /opt
  when:
    - not httpd_home.stat.exists

- name: "Post install HTTPD"
  command:
    cmd: "{{ httpd.home }}/httpd/.postinstall.systemd"
    chdir: "{{ httpd.home }}/httpd/"
    creates: /usr/lib/systemd/system/jbcs-httpd24-httpd.service

- set_fact:
    ssl_conf: "{{ httpd.home }}/httpd/conf.d/ssl.conf"

- set_fact:
    ssl_conf_disabled: "{{ ssl_conf }}.disabled"

- stat:
    path: "{{ ssl_conf }}"
  register: ssl_conf_file

- stat:
    path: "{{ ssl_conf_disabled }}"
  register: ssl_conf_disabled_file

- name: "Disabled SSL"
  file:
    src: "{{ ssl_conf }}"
    path: "{{ ssl_conf }}.disabled"
    state: hard
  when:
    - ssl_conf_file.stat.exists
    - not ssl_conf_disabled_file.stat.exists

- stat:
    path: "{{ ssl_conf }}.disabled"
  register: ssl_conf_remove

- name: "Remove old file"
  file:
    path: "{{ ssl_conf }}"
    state: absent
  when:
    - ssl_conf_remove.stat.exists

- name: "Start HTTPd Service"
  service:
    name: jbcs-httpd24-httpd.service
    state: started
    enabled: yes

- name: Wait for port 80 to be open
  wait_for:
    port: 80
    delay: 5
